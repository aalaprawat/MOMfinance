{"version":3,"sources":["logo.svg","component/navbar.js","component/home.js","component/users.js","component/add.js","component/indiusers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","class","src","ReactLogo","height","to","href","Component","Home","className","Users","props","state","name","Add","handleChange","bind","handleSubmit","event","this","setState","target","value","e","preventDefault","user","axios","post","then","res","console","log","data","alert","for","onChange","placeholder","type","onClick","Indiusers","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,kC,0MCKtBC,E,uKAEb,OACI,oCACI,yBAAKC,MAAM,oEACP,yBAAKC,IAAKC,IAAWC,OAAO,OACxB,kBAAC,IAAD,CAAMC,GAAG,IAAIJ,MAAM,wBAAwBK,KAAK,KAAI,sCACpD,wBAAIL,MAAM,sBACV,wBAAIA,MAAM,aACN,kBAAC,IAAD,CAAMI,GAAG,SAASJ,MAAM,WAAWK,KAAK,KAAI,yCAEhD,wBAAIL,MAAM,YACN,kBAAC,IAAD,CAAMI,GAAG,OAAOJ,MAAM,YAAY,+C,GAZ1BM,aCFfC,E,uKAEb,OACI,oCACI,uBAAGP,MAAQ,iBAAX,iBACA,yBAAKQ,UAAU,oBACf,4BAAQR,MAAM,+CACV,kBAAC,IAAD,CAAMI,GAAG,OAAOJ,MAAM,mBAAtB,2BAKJ,4BAAQA,MAAM,sCACV,kBAAC,IAAD,CAAMI,GAAI,SAASJ,MAAM,mBAAzB,iC,GAbcM,aCDbG,E,kDAEjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAM,CACPC,KAAK,IAJK,E,qDASd,OACI,yC,GAZuBN,a,yBCCdO,E,kDACjB,WAAYH,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,KAAM,IAEpB,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALN,E,yDAQLE,GACTC,KAAKC,SAAS,CAACP,KAAKK,EAAMG,OAAOC,U,mCAGxBC,GACTA,EAAEC,iBACF,IAAMC,EAAK,CACPZ,KAAKM,KAAKP,MAAMC,MAEpBa,IAAMC,KAAK,+BAA+BF,GACzCG,MAAK,SAACC,GAAOC,QAAQC,IAAIF,EAAIG,SAC9Bb,KAAKC,SAAS,CAACP,KAAK,KACpBoB,MAAM,gB,+BAIN,OAEQ,8BACI,yBAAKhC,MAAM,cACP,2BAAOiC,IAAI,sBAAX,iBACA,2BAAOjC,MAAM,eAAekC,SAAUhB,KAAKJ,aAAcO,MAAOH,KAAKP,MAAMC,KAAOuB,YAAY,UAElG,4BAAQC,KAAK,SAASC,QAASnB,KAAKF,aAAchB,MAAM,mBAAxD,e,GAhCaM,aCAZgC,E,uKAEb,OACI,yE,GAH2BhC,a,MCmBxBiC,MAdf,WACE,OACE,yBAAK/B,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOgC,KAAK,IAAIC,OAAK,EAACC,UAAWnC,IACjC,kBAAC,IAAD,CAAOiC,KAAK,SAASC,OAAK,EAACC,UAAWjC,IACtC,kBAAC,IAAD,CAAO+B,KAAK,iBAAiBC,OAAK,EAACC,UAAWJ,IAC9C,kBAAC,IAAD,CAAOE,KAAK,OAAOC,OAAK,EAACC,UAAW7B,OCJxB8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5B,MAAK,SAAA6B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,c","file":"static/js/main.73520bb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactLogo from '../logo.svg';\r\n\r\n\r\nexport default class Navbar extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <nav class=\"navbar navbar-expand-sm navbar-dark bg-secondary rounded-bottom \">\r\n                    <img src={ReactLogo} height=\"60\"/>\r\n                        <Link to=\"/\" class=\"navbar-brand  ml-auto\" href=\"#\"><h1>Laxmi</h1></Link>\r\n                        <ul class=\"navbar-nav ml-auto\">\r\n                        <li class=\"nav-item \">\r\n                            <Link to=\"/users\" class=\"nav-link\" href=\"#\"><h3>Display</h3></Link>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <Link to=\"/add\" class=\"nav-link\" ><h3>Create</h3></Link>\r\n                        </li>\r\n                        </ul>\r\n                </nav>         \r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <p class = \"text-muted h2\">Welcome Laxmi</p>\r\n                <div className=\"container-fluid \">\r\n                <button class=\"btn btn-primary text-white btn-block btn-lg\">\r\n                    <Link to=\"/add\" class=\"text-white bold\">\r\n                        Naye Logon Ko Add Kare\r\n                    </Link>\r\n                </button>\r\n                \r\n                <button class=\"btn btn-warning   btn-lg btn-block\">\r\n                    <Link to =\"/users\" class=\"text-white bold\">\r\n                        Purana Bahikhata Dekhe\r\n                    </Link>\r\n                </button>\r\n                \r\n                </div>    \r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Users extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            name:''\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport axios from 'axios'\r\n\r\nexport default class Add extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name: \"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({name:event.target.value});\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        const user={\r\n            name:this.state.name\r\n        }\r\n        axios.post(\"http://localhost:5000/users/\",user)\r\n        .then((res)=>{console.log(res.data)})\r\n        this.setState({name:\"\"})\r\n        alert(\"User Added\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n                <form>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input class=\"form-control\" onChange={this.handleChange} value={this.state.name}  placeholder=\"Name\"></input>\r\n                    </div>\r\n                    <button type=\"submit\" onClick={this.handleSubmit} class=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            \r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Indiusers extends Component{\r\n    render(){\r\n        return(\r\n            <>This is individual users page</>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\nimport Navbar from './component/navbar'\r\nimport Home from \"./component/home\"\r\nimport Users from \"./component/users\"\r\nimport Add from \"./component/add\"\r\nimport Indiusers from \"./component/indiusers\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <Navbar />\r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/users\" exact component={Users}/>\r\n        <Route path=\"/users/:userid\" exact component={Indiusers}/>\r\n        <Route path=\"/add\" exact component={Add}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}